AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  infra-l2-dynamo

  Dynamo DB tables for session events aggregator table

Parameters:
  Environment:
    Description: "The environment type"
    Type: "String"
    Default: dev
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: "none"
    
  PermissionsBoundary:
    Type: String
    Description: >
      The ARN of the permissions boundary to apply to any role created by the template
    Default: "none"

  KmsPendingWindowInDays:
    Type: Number
    Description: Number of days to retain KMS in pending deletion state when deleted
    Default: 30
    
Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue

Resources:
  SessionEventsTable:
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TableName: !Sub "session-events-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "userId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expiresOn
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        KMSMasterKeyId: !Ref SessionEventsTableKey
        SSEEnabled: true
        SSEType: KMS
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  AuthEventsTable:
    Type: "AWS::DynamoDB::Table"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: !Sub "auth-events-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "userId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expiresOn
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        KMSMasterKeyId: !Ref AuthEventsTableKey
        SSEEnabled: true
        SSEType: KMS

  SessionEventsTableKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "${AWS::StackName} sessionEvents table key"
      Enabled: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !Ref KmsPendingWindowInDays
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: "Allow the account to manage the key"
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} session events table key"
        - Key: Product
          Value: Gov.UK Sign On
        - Key: System
          Value: IPV Return Service
        - Key: Environment
          Value: !Ref Environment

  SessionEventsTableKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-session-events-table-key"
      TargetKeyId: !Ref SessionEventsTableKey

  AuthEventsTableKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "${AWS::StackName} authEvents table key"
      Enabled: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: !Ref KmsPendingWindowInDays
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: "Allow the account to manage the key"
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} auth events table key"
        - Key: Product
          Value: Gov.UK Sign On
        - Key: System
          Value: IPV Return Service
        - Key: Environment
          Value: !Ref Environment

  AuthEventsTableKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-auth-events-table-key"
      TargetKeyId: !Ref AuthEventsTableKey

  
Outputs:
  SessionEventsTableName:
    Description: "The name of the DynamoDB Session Events table"
    Value: !Ref SessionEventsTable
    Export:
      Name: !Sub "${AWS::StackName}-session-events-table-name"
  SessionEventsTableArn:
    Description: "The Arn of the DynamoDB Session Events table"
    Value: !GetAtt SessionEventsTable.Arn
    Export:
      Name: !Sub "${AWS::StackName}-session-events-table-arn"
  SessionEventsTableKeyArn:
    Description: "The Arn of the Session Events table encryption key"
    Value: !GetAtt SessionEventsTableKey.Arn
    Export:
      Name: !Sub "${AWS::StackName}-session-events-table-key-arn"
  SessionEventsTableKeyId:
    Description: "The Id of the Session Events table encryption key"
    Value: !Ref SessionEventsTableKey
    Export:
      Name: !Sub "${AWS::StackName}-session-events-table-key-id"
  SessionEventsTableKeyAlias:
    Description: "The Alias of the Session Events encryption key"
    Value: !Ref SessionEventsTableKeyAlias
  SessionEventsTableStreamArn:
    Description: "The Arn for the Session Events table Stream"
    Value: !GetAtt SessionEventsTable.StreamArn
    Export:
      Name: !Sub "${AWS::StackName}-session-events-table-stream-arn"
  AuthEventsTableName:
    Description: "The name of the DynamoDB Auth Events table"
    Value: !Ref AuthEventsTable
    Export:
      Name: !Sub "${AWS::StackName}-auth-events-table-name"
  AuthEventsTableArn:
    Description: "The Arn of the DynamoDB Auth Events table"
    Value: !GetAtt AuthEventsTable.Arn
    Export:
      Name: !Sub "${AWS::StackName}-auth-events-table-arn"
  AuthEventsTableKeyArn:
    Description: "The Arn of the Auth Events table encryption key"
    Value: !GetAtt AuthEventsTableKey.Arn
    Export:
      Name: !Sub "${AWS::StackName}-auth-events-table-key-arn"
  AuthEventsTableKeyId:
    Description: "The Id of the Auth Events table encryption key"
    Value: !Ref AuthEventsTableKey
    Export:
      Name: !Sub "${AWS::StackName}-auth-events-table-key-id"
  AuthEventsTableKeyAlias:
    Description: "The Alias of the Auth Events encryption key"
    Value: !Ref AuthEventsTableKeyAlias
  